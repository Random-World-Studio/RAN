/**
 * 这是测试源码，文件中包含ran语言所有的语法。
 * 使用的编码风格是建议的编码风格。
 * 不包括ran语言的标准库。
 * 用于测试编译器功能。
 */

modname test;//模块名声明，必须与文件名相同，此声明可以省略，但建议加上

import hello;//引用hello模块
//虽然hello模块中引用了标准库io，但是编译器不会编译它

A = 5;

s = "hello";

b = true;

struct mystruct1:
    name#str,
    uint,
    next#addr(mystruct1),
endstruct;

//取消数组的概念
//完全使用地址替代
//如果用数组风格声明，可以使用len()获取长度
listA#addr(int){4, 12, 8, 1, 17, 3, 0, 5, 9, 11, 2, 14, 20, 6, 7, 13, 10, 16, 15, 19, 18};

export def main()://由于main函数需要被操作系统调用，所以需要export
//不建议将其它模块没使用的函数export

    hello.main();
    a = A@;
    number = addmul(@a, 6);

    number += (i = number, j = @a) -> i * j;//直接使用lambda表达式

    quick_sort(listA, listA + len(listA));

    swap_time = 0;
    for (i = 0; i <= len(listA) / 2; i += 1):
        swap(listA + i, listA + len(listA) - i - 1);
        swap_time += 1;
    endfor;

enddef;

def addmul(a#int, b#int)#int -> (a + b) * b;//将函数声明为lambda表达式
enddef;//这里的函数声明没有export说明其它模块无法访问

def quick_sort(begin#addr(int), end#addr(int)):

    if(end - begin == 2)://多行if语句，以endif结尾
        if(begin[0] > begin[1]) swap(begin, begin + 1);
        return;
    endif;

    i = 0, j = end - begin - 1;
    while (i != j)://多行while语句，以endwhile结尾

        while (begin[i] < begin[j]) j -= 1;//单行while语句
        swap(begin + i, begin + j);

        if (i == j) break;//单行if语句

        while (begin[i] < begin[j]) i += 1;
        swap(begin + i, begin + j);
    
    endwhile;

    quick_sort(begin, i);
    quick_sort(i + 1, end);

enddef;

def swap(a#addr(int), b#addr(int)):

    c#int = @a;
    @a = @b;
    @b = c;

enddef;
